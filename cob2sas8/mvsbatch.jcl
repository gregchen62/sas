//COB2SAS1 JOB .. your job card information...
//*
//* VERIFY LOWERCASED INFORMATION
//*
//* ***********************************************************
//* COB2SAS DD POINTS TO THE PDS THAT CONTAINS YOUR COB2SAS
//*    PROGRAMS.
//*
//* INCOBOL DD POINTS TO THE FILE (OR PDS MEMBER) THAT CONTAINS
//*    YOUR COPYBOOK.
//*
//* OUTSAS DD POINTS TO A FLAT FILE (OR PDS MEMBER) TO WHICH
//*    COB2SAS WILL WRITE YOUR INPUT AND LABEL STATEMENTS.
//*    IF THIS FILE DOES NOT EXIST, ALLOCATE IT DISP=NEW
//*    WITH DCB=(RECFM=FB,LRECL=80).  THE SIZE OF THIS FILE
//*    SHOULD BE, AT MINIMUM, AS LARGE AS YOUR COPYBOOK
//*    (INCOBOL DD).
//*
//* PERM DD POINTS TO A SAS DATA LIBRARY THAT WILL CONTAIN ALL
//*    OF THE INFORMATION THAT COB2SAS GATHERED ABOUT YOUR
//*    COPYBOOK.  IF THIS FILE DOES NOT EXIST, ALLOCATE IT
//*    DISP=NEW WITH
//*    DCB=(RECFM=FS,LRECL=6144,BLKSIZE=6144,DSORG=PS).  AT
//*    MINIMUM, THE SPACE ALLOCATED SHOULD BE
//*    SPACE=(6144,(500,200),,,ROUND)
//* ***********************************************************
//*
//*
//         EXEC sas8
//COB2SAS DD DISP=SHR,DSN=your.cob2sas.programs.pds
//INCOBOL DD DISP=SHR,DSN=your.copy.book
//OUTSAS  DD DISP=OLD,DSN=your.output.flat.file
//PERM    DD DISP=OLD,DSN=your.output.sas.data.library
//SYSIN   DD *
  OPTIONS NOTES NOSOURCE NOSOURCE2 LINESIZE=75 COMPRESS=NO;

  %INCLUDE COB2SAS(R2MVS);
  RUN;

  PROC PRINT DATA=DICTNRY;
     BY FILENAME NOTSORTED;
     FORMAT RDF_NAME $8.;
     ID LEVEL;
     VAR NST_DPTH NEWNAME USAGE PICTURE INFMT ATBYTE BYTES
         OCR_VAL RDF_NAME;
  RUN;
